"""This type stub file was generated by pyright."""

from typing import Any, Dict, Optional

logger = ...
DEFAULT_CONFIG_DIR = ...

class AmazonOrdersConfig:
    """An object containing ``amazon-orders``'s configuration. The state of this object is populated from the config file,
    if present, when it is instantiated, and it is also persisted back to the config file when :func:`~save` is called.

    If overrides are passed in ``data`` parameter when this object is instantiated, they will be used in the
    instantiated object, but not persisted to the config file until :func:`~save` is called.
    """
    def __init__(
        self, config_path: Optional[str] = ..., data: Optional[Dict[str, Any]] = ...
    ) -> None: ...
    def __getattr__(self, key: str) -> Any: ...
    def __getstate__(self):  # -> dict[str, Any]:
        ...
    def __setstate__(self, state):  # -> None:
        ...
    def update_config(self, key: str, value: str, save: bool = ...) -> None:
        """Update the given key/value pair in the config object. By default, this update will also be persisted to the
        config file, but if only the object should be updated without persisted, passing ``save=False``.

        :param key: The to be updated.
        :param value: The new value.
        :param save: True if the config should be persisted.
        """
        ...

    def save(self) -> None:
        """Persist the current state of this config object to the config file."""
        ...
